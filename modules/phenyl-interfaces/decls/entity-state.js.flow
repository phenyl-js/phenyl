// @flow
import type { UpdateOperation } from 'mongolike-operations'

import type { Entity } from './entity.js.flow'

import type { IdQuery, IdsQuery, WhereQuery } from './query.js.flow'

import type {
  IdUpdateCommand,
  MultiUpdateCommand,
  DeleteCommand,
} from './command.js.flow'

export type EntityPool = { [entityName: string]: EntitiesById }
export type EntitiesById = { [id: string]: Entity }

export interface EntityState {
  pool: EntityPool;
}

export interface EntityStateFinder {
  find(query: WhereQuery): Array<Entity>;
  findOne(query: WhereQuery): ?Entity;
  get(query: IdQuery): Entity;
  getByIds(query: IdsQuery): Array<Entity>;
  has(query: IdQuery): boolean;
}

export interface EntityStateUpdater {
  register(entityName: string, ...entities: Array<Entity>): UpdateOperation;
  updateById(command: IdUpdateCommand): UpdateOperation;
  updateMulti(command: MultiUpdateCommand): UpdateOperation;
  delete(command: DeleteCommand): UpdateOperation;
}
