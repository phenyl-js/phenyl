// @flow

import type {
  UpdateOperation,
} from 'mongolike-operations'
import type { Id } from './id.js.flow'
import type { Session } from './session.js.flow'
import type { Entity } from './entity.js.flow'

export type CommandResult = {
  ok: 1,
  n: number,
  versionId?: ?Id,
  prevVersionId?: ?Id,
  prevVersionsById?: { [entityId: Id]: Id },
  versionsById?: { [entityId: Id]: Id },
}

export type MultiValuesCommandResult = {
  ok: 1,
  n: number,
  entities: Array<Entity>,
  prevVersionsById: { [entityId: Id]: Id },
  versionsById: { [entityId: Id]: Id },
}

export type GetCommandResult = {|
  ok: 1,
  n: number, // TODO necessary?
  entity: Entity,
  prevVersionId: ?Id,
  versionId: ?Id,
|}

export type PushCommandResult = {|
  ok: 1,
  n: number, // TODO necessary?
  operations: Array<UpdateOperation>,
  prevVersionId: ?Id,
  versionId: ?Id,
  newOperation: UpdateOperation,
|} | GetCommandResult

export type CustomCommandResult = {
  ok: 1,
  result?: Object
}

export type LoginCommandResult = {
  ok: 1,
  session: Session,
  user: ?Entity,
}

export type LogoutCommandResult = {
  ok: 1,
}
